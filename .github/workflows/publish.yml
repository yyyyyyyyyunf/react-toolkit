name: Publish Packages

on:
  push:
    tags:
      - 'v*'  # 标签触发，用于手动发布
  workflow_dispatch:  # 手动触发
    inputs:
      package:
        description: 'Package to publish (memo, observer, or all)'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - memo
          - observer
      version_type:
        description: 'Version increment type (patch, minor, major)'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install pnpm
        run: |
          npm install -g pnpm@latest
          echo "pnpm version: $(pnpm --version)"
      
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      
      - name: Run checks
        run: pnpm check
      
      - name: Build packages
        run: pnpm build
      
      - name: Update package versions
        if: github.event_name == 'workflow_dispatch'
        run: |
          VERSION_TYPE="${{ github.event.inputs.version_type }}"
          SELECTED_PACKAGE="${{ github.event.inputs.package }}"
          
          echo "🎯 版本更新信息:"
          echo "  版本类型: $VERSION_TYPE"
          echo "  选择的包: $SELECTED_PACKAGE"
          
          if [[ "$SELECTED_PACKAGE" == "observer" ]]; then
            # 只更新 observer 包版本
            cd packages/observer
            CURRENT_VERSION=$(node -p "require('./package.json').version")
            echo "当前 observer 版本: $CURRENT_VERSION"
            npm version $VERSION_TYPE --no-git-tag-version
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "更新 observer 版本到: $NEW_VERSION"
            cd ../..
          elif [[ "$SELECTED_PACKAGE" == "memo" ]]; then
            # 只更新 memo 包版本
            cd packages/memo
            CURRENT_VERSION=$(node -p "require('./package.json').version")
            echo "当前 memo 版本: $CURRENT_VERSION"
            npm version $VERSION_TYPE --no-git-tag-version
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "更新 memo 版本到: $NEW_VERSION"
            cd ../..
          else
            # 更新所有包版本
            echo "更新所有包版本..."
            
            # 更新 observer 包版本
            cd packages/observer
            CURRENT_VERSION=$(node -p "require('./package.json').version")
            echo "当前 observer 版本: $CURRENT_VERSION"
            npm version $VERSION_TYPE --no-git-tag-version
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "更新 observer 版本到: $NEW_VERSION"
            cd ../..
            
            # 更新 memo 包版本
            cd packages/memo
            CURRENT_VERSION=$(node -p "require('./package.json').version")
            echo "当前 memo 版本: $CURRENT_VERSION"
            npm version $VERSION_TYPE --no-git-tag-version
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "更新 memo 版本到: $NEW_VERSION"
            cd ../..
          fi
      
      - name: Show publish info
        run: |
          echo "🎯 发布信息:"
          echo "  触发方式: ${{ github.event_name }}"
          echo "  选择的包: ${{ github.event.inputs.package || 'auto' }}"
          echo "  版本类型: ${{ github.event.inputs.version_type || 'auto' }}"
          echo "  标签: ${{ github.ref_name }}"
          echo ""
          echo "📦 包版本信息:"
          echo "  @fly4react/observer: $(node -p "require('./packages/observer/package.json').version")"
          echo "  @fly4react/memo: $(node -p "require('./packages/memo/package.json').version")"
      
      - name: Publish @fly4react/observer
        if: |
          github.event.inputs.package == 'observer' ||
          github.event.inputs.package == 'all' ||
          github.event_name == 'push'
        run: |
          cd packages/observer
          echo "Publishing @fly4react/observer..."
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Publish @fly4react/memo
        if: |
          github.event.inputs.package == 'memo' ||
          github.event.inputs.package == 'all' ||
          github.event_name == 'push'
        run: |
          cd packages/memo
          echo "Publishing @fly4react/memo..."
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Commit version updates
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "chore: bump version via manual trigger"
          git push origin ${{ github.ref }}
      
      - name: Auto merge to main
        if: github.ref == 'refs/heads/release'
        run: |
          echo "🔄 自动合并 release 到 main..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # 切换到 main 分支
          git checkout main
          git pull origin main
          
          # 合并 release 分支
          git merge origin/release --no-edit
          
          # 推送到 main
          git push origin main
          
          echo "✅ 成功合并到 main 分支"
      
      - name: Create GitHub Release
        if: github.event_name == 'push'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Release ${{ github.ref_name }}
            
            This release includes updates to @react-toolkit packages.
            
            ### Installation
            ```bash
            npm install @fly4react/observer@latest
            npm install @fly4react/memo@latest
            ```
            
            ### Packages Updated
            - @fly4react/observer@$(node -p "require('./packages/observer/package.json').version")
            - @fly4react/memo@$(node -p "require('./packages/memo/package.json').version")
          draft: false
          prerelease: false
