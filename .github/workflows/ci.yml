name: CI

on:
  push:
    branches: [ main, develop, release, 'dev/**' ]
  pull_request:
    branches: [ main, develop, release ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史用于变化检测
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install pnpm
        run: |
          npm install -g pnpm@latest
          echo "pnpm version: $(pnpm --version)"
          echo "Node version: $(node --version)"
          echo "npm version: $(npm --version)"
      
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      
      - name: Run type check
        run: pnpm check
      
      - name: Run linting
        run: pnpm lint
      
      - name: Install memo package from npm
        run: |
          echo "📦 从 npm 安装 memo 包..."
          cd packages/observer
          echo "🔍 当前目录: $(pwd)"
          echo "📦 安装前检查 node_modules..."
          ls -la node_modules/ || echo "node_modules 不存在"
          pnpm install @fly4react/memo@1.0.6 --no-workspace
          echo "📦 安装后检查 memo 包..."
          ls -la node_modules/@fly4react/memo/ || echo "❌ memo 包不存在"
          echo "📦 检查 memo 包的 package.json..."
          cat node_modules/@fly4react/memo/package.json | head -20
          echo "📦 检查 memo 包的 exports..."
          cat node_modules/@fly4react/memo/package.json | grep -A 10 '"exports"'
          cd ../..
          echo "✅ memo 包安装完成"
      
      - name: Build memo package first
        run: |
          echo "🔨 先构建 memo 包..."
          cd packages/memo
          npx rslib build
          cd ../..
          echo "✅ memo 包构建完成"
      
      - name: Build observer package
        run: |
          echo "🔨 构建 observer 包..."
          cd packages/observer
          # 确保memo包可以被正确解析
          echo "📦 检查 memo 包是否存在..."
          ls -la node_modules/@fly4react/memo/ || echo "❌ memo 包不存在"
          echo "📦 检查 memo 包的 dist 文件..."
          ls -la node_modules/@fly4react/memo/dist/ || echo "❌ memo dist 不存在"
          echo "📦 检查 memo 包的 exports 配置..."
          cat node_modules/@fly4react/memo/package.json | grep -A 10 '"exports"'
          echo "🔍 尝试直接导入 memo 包..."
          node -e "try { console.log('✅ memo 包导入成功:', require('@fly4react/memo')); } catch(e) { console.log('❌ memo 包导入失败:', e.message); }" || echo "导入测试失败"
          echo "🔨 开始构建..."
          npx rslib build
          cd ../..
          echo "✅ observer 包构建完成"
      
      - name: Run tests
        run: |
          echo "🧪 运行所有测试..."
          cd packages/observer
          echo "📦 检查 memo 包是否存在..."
          ls -la node_modules/@fly4react/memo/ || echo "❌ memo 包不存在"
          echo "📦 检查 memo 包的 dist 文件..."
          ls -la node_modules/@fly4react/memo/dist/ || echo "❌ memo dist 不存在"
          echo "📦 检查 memo 包的 exports 配置..."
          cat node_modules/@fly4react/memo/package.json | grep -A 10 '"exports"'
          echo "🔍 测试 vitest 配置..."
          cat vitest.config.ts
          echo "🔍 尝试直接导入 memo 包..."
          node -e "try { console.log('✅ memo 包导入成功:', require('@fly4react/memo')); } catch(e) { console.log('❌ memo 包导入失败:', e.message); }" || echo "导入测试失败"
          echo "🔍 检查文件系统路径..."
          pwd
          ls -la
          echo "🔍 检查 memo 包的具体文件..."
          find node_modules/@fly4react/memo -name "*.js" -o -name "*.ts" | head -10
          echo "🔍 检查 memo 包的 index.js 内容..."
          head -5 node_modules/@fly4react/memo/dist/index.js || echo "index.js 不存在"
          echo "🧪 运行 observer 测试..."
          pnpm vitest run --reporter=verbose
          cd ../memo
          echo "🧪 运行 memo 测试..."
          pnpm vitest run --reporter=verbose
      
      - name: Check build output
        run: |
          echo "Checking build output..."
          ls -la packages/observer/dist/
          ls -la packages/memo/dist/
      
      - name: Detect changes
        id: detect-changes
        run: |
          chmod +x ./scripts/detect-changes.sh
          ./scripts/detect-changes.sh main
      
      - name: Setup npm authentication
        if: steps.detect-changes.outputs.OBSERVER_CHANGED == 'true' || steps.detect-changes.outputs.MEMO_CHANGED == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Publish packages
        if: steps.detect-changes.outputs.OBSERVER_CHANGED == 'true' || steps.detect-changes.outputs.MEMO_CHANGED == 'true'
        run: |
          echo "📦 发布包到 npm..."
          echo "Observer 变化: ${{ steps.detect-changes.outputs.OBSERVER_CHANGED }}"
          echo "Memo 变化: ${{ steps.detect-changes.outputs.MEMO_CHANGED }}"
          
          if [ "${{ steps.detect-changes.outputs.OBSERVER_CHANGED }}" = "true" ]; then
            echo "🚀 发布 @fly4react/observer..."
            cd packages/observer
            npm publish --access public
            cd ../..
          fi
          
          if [ "${{ steps.detect-changes.outputs.MEMO_CHANGED }}" = "true" ]; then
            echo "🚀 发布 @fly4react/memo..."
            cd packages/memo
            npm publish --access public
            cd ../..
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Auto merge to main
        if: steps.detect-changes.outputs.OBSERVER_CHANGED == 'true' || steps.detect-changes.outputs.MEMO_CHANGED == 'true'
        run: |
          echo "🔄 自动合并 release 到 main..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 切换到 main 分支
          git checkout main
          git pull origin main
          
          # 合并 release 分支
          git merge origin/release --no-edit
          
          # 推送到 main
          git push origin main
          
          echo "✅ 成功合并到 main 分支"
      
      - name: Skip publishing
        if: steps.detect-changes.outputs.OBSERVER_CHANGED != 'true' && steps.detect-changes.outputs.MEMO_CHANGED != 'true'
        run: |
          echo "✅ 没有检测到包代码变化，跳过发布"
          echo "Observer 变化: ${{ steps.detect-changes.outputs.OBSERVER_CHANGED }}"
          echo "Memo 变化: ${{ steps.detect-changes.outputs.MEMO_CHANGED }}"
          echo "CI 成功完成，但未发布新版本"
