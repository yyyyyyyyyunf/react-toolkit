name: CI

on:
  push:
    branches: [ main, develop, release, 'dev/**' ]
  pull_request:
    branches: [ main, develop, release ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史用于变化检测
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install pnpm
        run: |
          npm install -g pnpm@latest
          echo "pnpm version: $(pnpm --version)"
          echo "Node version: $(node --version)"
          echo "npm version: $(npm --version)"
      
      - name: Install dependencies
        run: |
          echo "📦 从 workspace 安装依赖..."
          pnpm install --no-frozen-lockfile
          echo "✅ 依赖安装完成"
      
      - name: Run type check
        run: pnpm check
      
      - name: Run linting
        run: pnpm lint
      
      - name: Build and test packages
        run: |
          echo "🔨 构建并测试所有包..."
          pnpm build:test
          echo "✅ 构建和测试完成"
      
      - name: Check build output
        run: |
          echo "Checking build output..."
          ls -la packages/observer/dist/
          ls -la packages/memo/dist/
      
      - name: Detect changes
        id: detect-changes
        run: |
          chmod +x ./scripts/detect-changes.sh
          ./scripts/detect-changes.sh main
      
      - name: Setup npm authentication
        if: steps.detect-changes.outputs.OBSERVER_CHANGED == 'true' || steps.detect-changes.outputs.MEMO_CHANGED == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Publish packages
        if: steps.detect-changes.outputs.OBSERVER_CHANGED == 'true' || steps.detect-changes.outputs.MEMO_CHANGED == 'true'
        run: |
          echo "📦 发布包到 npm..."
          echo "Observer 变化: ${{ steps.detect-changes.outputs.OBSERVER_CHANGED }}"
          echo "Memo 变化: ${{ steps.detect-changes.outputs.MEMO_CHANGED }}"
          
          if [ "${{ steps.detect-changes.outputs.OBSERVER_CHANGED }}" = "true" ]; then
            echo "🚀 发布 @fly4react/observer..."
            cd packages/observer
            npm publish --access public
            cd ../..
          fi
          
          if [ "${{ steps.detect-changes.outputs.MEMO_CHANGED }}" = "true" ]; then
            echo "🚀 发布 @fly4react/memo..."
            cd packages/memo
            npm publish --access public
            cd ../..
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Auto merge to main
        if: github.ref == 'refs/heads/release'
        run: |
          echo "🔄 自动合并 release 到 main..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # 切换到 main 分支
          git checkout main
          git pull origin main
          
          # 合并 release 分支
          git merge origin/release --no-edit
          
          # 推送到 main
          git push origin main
          
          echo "✅ 成功合并到 main 分支"
      
      - name: Skip publishing
        if: steps.detect-changes.outputs.OBSERVER_CHANGED != 'true' && steps.detect-changes.outputs.MEMO_CHANGED != 'true'
        run: |
          echo "✅ 没有检测到包代码变化，跳过发布"
          echo "Observer 变化: ${{ steps.detect-changes.outputs.OBSERVER_CHANGED }}"
          echo "Memo 变化: ${{ steps.detect-changes.outputs.MEMO_CHANGED }}"
          echo "CI 成功完成，但未发布新版本"
